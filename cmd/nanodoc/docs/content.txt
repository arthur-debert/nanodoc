SPECIFYING CONTENT IN NANODOC
=============================

Nanodoc provides flexible ways to specify which files to include in your document, as well as which parts of those files to extract.

Paths can be passed both as arguments or in bundle files (see bellow). Both ways work the same way: 

	1. files: including line range(s)
    2. glob patterns: such as **/*.txxt or *.md
    3. directories


Glob patterns are handled internally by nanodoc using gitignore-style matching. Simple patterns like *.md may be expanded by the shell, but recursive patterns like **/*.txxt are processed by nanodoc itself.


1. How Directory Expansion Works:

  1. When expanding a directory, nanodoc will filter by file extensions. By default those are `.txt` and `.md`
  2. Additional extensions like js or py can be added with the --txt-ext option.


2. The include and exclude options:

     Both options use glob patterns. For directory expansion, they filter files
     AFTER extension checking. This means --include alone cannot override the
     extension filter - you must use --txt-ext to add extensions first.

     However, when using glob patterns as arguments (e.g., **/*.js), the extension filter is bypassed entirely. 

		-- include and exclude examples: 
		
			# Include only Go source files
			nanodoc --include "**/*.go" src/
			# Exclude test files
			nanodoc --exclude "**/*_test.go" src/
			# Combine patterns
			nanodoc --include "**/*.go" --exclude "**/vendor/**" .
		
		-- bash

		-- Patterns can also be specified in bundle files:
		 
			# api-docs.bundle.txt
			--include "**/*.go"
			--exclude "**/*_test.go"
			--exclude "**/internal/**"

			pkg/
			cmd/
		-- 


3. Line Range Selection

	You can extract specific parts of files using line range syntax.

		-- line ranges examples: 
		
			# single line
			nanodoc readme.txt:L20        # Line 20
			# Line from end (negative indexing)
			nanodoc readme.txt:L$1        # Last line
			nanodoc readme.txt:L$5        # 5th-to-last line
			# Basic range
			nanodoc readme.txt:L20-24     # Lines 20 through 24
			# Using negative indices
			nanodoc readme.txt:L1-$1      # Full file (first to last)
			# Open-ended range
			nanodoc readme.txt:L50-       # Line 50 to end of file
			# Multiple Selections
			nanodoc readme.txt:L14,L23-38,L40

		-- bash


4. Additional File Extensions

	By default, nanodoc processes .txt and .md files. Add more extensions:

		--
		# Process Python files
		nanodoc --txt-ext py src/

		# Multiple extensions
		nanodoc --txt-ext py --txt-ext js --txt-ext yaml project/
		--