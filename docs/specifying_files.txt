Items to be included as passed as arguments to the command.
Three ways to tell nanodoc which files to include:

1. INDIVIDUAL FILES:
   nanodoc file1.txt file2.txt file3.md
   Processes exactly these files in the order provided.

2. DIRECTORIES:
      nanodoc docs/
   Finds and processes all .txt and .md files in the directory and subdirectories.
   Files processed in alphabetical order.

3. BUNDLE FILES:
   nanodoc my-bundle.txt
   A bundle file is a text file listing the paths to include, one per line.

   # my-bundle.txt
   README.md
   docs/
   pkg/nanodoc/*.go

   Bundle files can also embed configuration options using the same flags as
   the command line. Lines starting with '#' are ignored as comments.

   # my-bundle.txt with options
   --toc
   --global-line-numbers
   --header-style nice
   --theme classic-dark

   README.md
   docs/

   PRECEDENCE:
   Command-line arguments always override options set in a bundle file. This
   allows a bundle to define a standard output that can be easily tweaked.


4. LIVE BUNDLE FILES:
   nanodoc live-bundle.txt
   Where live-bundle.txt can mix text and file paths:

   Introduction to the document
   chapter1.txt
   This text appears between chapters
   chapter2.txt
   Conclusion

   In live bundles, file paths are replaced with their content inline.
   No file titles or line number resets occur at file boundaries.
   This allows for seamless integration of content from multiple files.

   Example:
   If chapter1.txt contains "This is chapter 1 content" and
   chapter2.txt contains "This is chapter 2 content", the result will be:

   Introduction to the document
   This is chapter 1 content
   This text appears between chapters
   This is chapter 2 content
   Conclusion

   Live bundles also support inline file inclusion using the [[file:path]] syntax:

   This paragraph includes [[file:quote.txt]] right in the middle of the text.

   With this syntax, the file content is inserted inline with all line breaks
   removed. This is useful for including short snippets of text within a paragraph.

   Example:
   If quote.txt contains "to be or not to be\nthat is the question", the result will be:

   This paragraph includes to be or not to be that is the question right in the middle of the text.
